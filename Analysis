/* Q1: Who is the senior most employee based on job title? */
select * from employee
order by levels desc
limit 1

/* Q2: Which countries have the most Invoices? */
select count(*) as c,billing_country
from invoice
group by billing_country
order by c desc
limit 1

/* Q3: What are top 3 values of total invoice? */

select * 
from invoice
order by total desc
limit 3

/* Q4: Which city has the best customers? We would like to throw a
promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals */

select sum(total) as TOTAL_SALE, billing_city
from invoice
group by billing_city
order by TOTAL_SALE desc
limit 3

/* Q5: Who is the best customer? The customer who has spent the most 
money will be declared the best customer. 
Write a query that returns the person who has spent the most money.*/

select customer.customer_id,customer.first_name,customer.last_name,SUM(invoice.total) as Money_Spend
from customer
join invoice on customer.customer_id= invoice.customer_id
group by customer.customer_id
order by Money_Spend desc
limit 1


/* Q6: Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A. */

select distinct email as Email,first_name as FirstName,last_name as LastName, genre.name as GName
from customer
join invoice on invoice.customer_id = customer.customer_id
join invoice_line on invoice_line.invoice_id = invoice.invoice_id
join Track on Track.Track_id = invoice_line.Track_id
JOIN genre ON genre.genre_id = track.genre_id
where genre.name LIKE 'Rock'
order by email 


/* Q7: Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands. */

select artist.artist_id,artist.name , count(artist.artist_id) as NO_OF_SONG
from track
join album on album.album_id= track.album_id
join artist on artist.artist_id = album.artist_id
join genre on genre.genre_id = track.genre_id
where genre.name  LIKE 'Rock'
group by artist.artist_id
order by NO_OF_SONG desc
limit 10


/* Q8: Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first. */
select * from track
select name,milliseconds 
from track 
where milliseconds >(
                    select AVG(milliseconds) as Avg_Len
					from track
) order by milliseconds desc
limit 10
